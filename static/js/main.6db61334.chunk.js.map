{"version":3,"sources":["stateManager/types.js","store.js","stateManager/rowReducers.js","components/Alerts.js","components/Popup.js","stateManager/rowActions.js","components/AlertHandler.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["ROW_LIST_REQUEST","ROW_LIST_SUCCESS","ROW_LIST_FAIL","ROW_ADD_REQUEST","ROW_ADD_SUCCESS","ROW_ADD_FAIL","ROW_EDIT_REQUEST","ROW_EDIT_SUCCESS","ROW_EDIT_FAIL","ROW_DELETE_REQUEST","ROW_DELETE_SUCCESS","ROW_DELETE_FAIL","reducer","combineReducers","rowList","state","rows","action","type","loading","payload","error","rowDelete","success","rowAdd","rowEdit","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","PopAlert","isOpen","message","severity","useState","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","variant","StaticAlert","AddPopup","handleClick","dispatch","useDispatch","name","setName","username","setUsername","email","setEmail","phone","setPhone","website","setWebsite","alert","setAlert","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","required","value","onChange","e","target","DialogActions","Button","onClick","color","row","a","config","axios","post","setTimeout","EditPopup","rowId","useSelector","useEffect","find","id","Number","parseInt","put","AlertHandler","lDel","eDel","sDel","lAdd","eAdd","sAdd","lEdit","eEdit","sEdit","LinearProgress","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","hover","TableRow","useStyles","makeStyles","table","minWidth","container","maxHeight","fab","position","bottom","spacing","right","DataTable","classes","get","data","React","addOpen","setAddOpen","handleAddClick","rowNo","setRowNo","editOpen","setEditOpen","handleEditClick","deleteHandler","delete","deleteRow","Container","TableContainer","className","component","Paper","Table","stickyHeader","TableHead","TableBody","map","scope","ButtonGroup","Fab","aria-label","App","style","height","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6db61334.chunk.js","sourcesContent":["export const ROW_LIST_REQUEST = 'ROW_LIST_REQUEST'\r\nexport const ROW_LIST_SUCCESS = 'ROW_LIST_SUCCESS'\r\nexport const ROW_LIST_FAIL = 'ROW_LIST_FAIL'\r\n\r\nexport const ROW_ADD_REQUEST = 'ROW_ADD_REQUEST'\r\nexport const ROW_ADD_SUCCESS = 'ROW_ADD_SUCCESS'\r\nexport const ROW_ADD_FAIL = 'ROW_ADD_FAIL'\r\n\r\nexport const ROW_EDIT_REQUEST = 'ROW_EDIT_REQUEST'\r\nexport const ROW_EDIT_SUCCESS = 'ROW_EDIT_SUCCESS'\r\nexport const ROW_EDIT_FAIL = 'ROW_EDIT_FAIL'\r\n\r\nexport const ROW_DELETE_REQUEST = 'ROW_DELETE_REQUEST'\r\nexport const ROW_DELETE_SUCCESS = 'ROW_DELETE_SUCCESS'\r\nexport const ROW_DELETE_FAIL = 'ROW_DELETE_FAIL'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {\r\n  rowAddReducer,\r\n  rowDeleteReducer,\r\n  rowEditReducer,\r\n  rowListReducer\r\n} from './stateManager/rowReducers'\r\n\r\nconst reducer = combineReducers({\r\n  rowList: rowListReducer,\r\n  rowDelete: rowDeleteReducer,\r\n  rowAdd: rowAddReducer,\r\n  rowEdit: rowEditReducer\r\n})\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  ROW_LIST_REQUEST,\r\n  ROW_LIST_SUCCESS,\r\n  ROW_LIST_FAIL,\r\n  ROW_DELETE_REQUEST,\r\n  ROW_DELETE_SUCCESS,\r\n  ROW_DELETE_FAIL,\r\n  ROW_ADD_REQUEST,\r\n  ROW_ADD_SUCCESS,\r\n  ROW_ADD_FAIL,\r\n  ROW_EDIT_REQUEST,\r\n  ROW_EDIT_SUCCESS,\r\n  ROW_EDIT_FAIL\r\n} from './types'\r\n\r\nexport const rowListReducer = (state = { rows: [] }, action) => {\r\n  switch (action.type) {\r\n    case ROW_LIST_REQUEST:\r\n      return { loading: true, rows: [] }\r\n    case ROW_LIST_SUCCESS:\r\n      return { loading: false, rows: action.payload }\r\n    case ROW_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const rowDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ROW_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case ROW_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case ROW_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const rowAddReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ROW_ADD_REQUEST:\r\n      return { loading: true }\r\n    case ROW_ADD_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case ROW_ADD_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const rowEditReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ROW_EDIT_REQUEST:\r\n      return { loading: true }\r\n    case ROW_EDIT_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case ROW_EDIT_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Snackbar } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nexport const PopAlert = ({ isOpen, message, severity }) => {\r\n  const [open, setOpen] = useState(isOpen)\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      autoHideDuration={10000}\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert onClose={handleClose} variant='filled' severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\nexport const StaticAlert = ({ message }) => {\r\n  return (\r\n    <Alert variant='filled' severity='error'>\r\n      {message}\r\n    </Alert>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { StaticAlert } from './Alerts'\r\nimport { addRow, editRow } from '../stateManager/rowActions'\r\n\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from '@material-ui/core'\r\n\r\nexport const AddPopup = ({ open, handleClick }) => {\r\n  const dispatch = useDispatch()\r\n  const [name, setName] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [website, setWebsite] = useState('')\r\n  const [alert, setAlert] = useState('')\r\n\r\n  const addRowHandler = () => {\r\n    if (!name || !username || !email || !phone || !website) {\r\n      setAlert('Please fill all the fields.')\r\n      setTimeout(() => {\r\n        setAlert('')\r\n      }, 5000)\r\n    } else {\r\n      const newRow = {\r\n        name,\r\n        username,\r\n        email,\r\n        phone,\r\n        website\r\n      }\r\n\r\n      dispatch(addRow(newRow))\r\n\r\n      setName('')\r\n      setUsername('')\r\n      setEmail('')\r\n      setPhone('')\r\n      setWebsite('')\r\n      handleClick()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClick} fullWidth maxWidth='sm'>\r\n      <DialogTitle>Add Row</DialogTitle>\r\n      {alert && <StaticAlert message={alert} />}\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Please fill all the fields in the below form to add a row.\r\n        </DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          label='Name'\r\n          type='text'\r\n          fullWidth\r\n          required\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          label='Username'\r\n          type='text'\r\n          fullWidth\r\n          required\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          label='Email'\r\n          type='email'\r\n          fullWidth\r\n          required\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          label='Phone'\r\n          type='text'\r\n          fullWidth\r\n          required\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          label='Website'\r\n          type='text'\r\n          fullWidth\r\n          required\r\n          value={website}\r\n          onChange={(e) => setWebsite(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClick} color='primary'>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={addRowHandler} color='primary'>\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport const EditPopup = ({ open, handleClick, rowId }) => {\r\n  const dispatch = useDispatch()\r\n  const rowList = useSelector((state) => state.rowList)\r\n  const { rows } = rowList\r\n\r\n  const [name, setName] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [website, setWebsite] = useState('')\r\n  const [alert, setAlert] = useState('')\r\n\r\n  useEffect(() => {\r\n    let row = rows.find((row) => row.id === Number.parseInt(rowId))\r\n    if (row) {\r\n      setName(row.name)\r\n      setUsername(row.username)\r\n      setEmail(row.email)\r\n      setPhone(row.phone)\r\n      setWebsite(row.website)\r\n    }\r\n  }, [rowId, rows])\r\n\r\n  const editRowHandler = () => {\r\n    if (!name || !username || !email || !phone || !website) {\r\n      setAlert('Please fill all the fields.')\r\n      setTimeout(() => {\r\n        setAlert('')\r\n      }, 5000)\r\n    } else {\r\n      const updatedRow = {\r\n        name,\r\n        username,\r\n        email,\r\n        phone,\r\n        website,\r\n        id: rowId\r\n      }\r\n\r\n      dispatch(editRow(updatedRow))\r\n\r\n      setName('')\r\n      setUsername('')\r\n      setEmail('')\r\n      setPhone('')\r\n      setWebsite('')\r\n      handleClick()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClick} fullWidth maxWidth='sm'>\r\n      <DialogTitle>Edit Row</DialogTitle>\r\n      {alert && <StaticAlert message={alert} />}\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Please edit or leave unchanged the fields in the below form to edit\r\n          the row.\r\n        </DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          label='Name'\r\n          type='text'\r\n          fullWidth\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          label='Username'\r\n          type='text'\r\n          fullWidth\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          label='Email'\r\n          type='email'\r\n          fullWidth\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          label='Phone'\r\n          type='text'\r\n          fullWidth\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          label='Website'\r\n          type='text'\r\n          fullWidth\r\n          value={website}\r\n          onChange={(e) => setWebsite(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClick} color='primary'>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={editRowHandler} color='primary'>\r\n          Edit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n  ROW_LIST_REQUEST,\r\n  ROW_LIST_SUCCESS,\r\n  ROW_LIST_FAIL,\r\n  ROW_DELETE_REQUEST,\r\n  ROW_DELETE_SUCCESS,\r\n  ROW_DELETE_FAIL,\r\n  ROW_ADD_REQUEST,\r\n  ROW_ADD_SUCCESS,\r\n  ROW_ADD_FAIL,\r\n  ROW_EDIT_REQUEST,\r\n  ROW_EDIT_SUCCESS,\r\n  ROW_EDIT_FAIL\r\n} from './types'\r\n\r\nexport const listRows = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROW_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get('/rows')\r\n\r\n    dispatch({ type: ROW_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({ type: ROW_LIST_FAIL, payload: error.message })\r\n  }\r\n}\r\n\r\nexport const deleteRow = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROW_DELETE_REQUEST })\r\n\r\n    await axios.delete(`/rows/${id}`)\r\n\r\n    dispatch({ type: ROW_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({ type: ROW_DELETE_FAIL, payload: error.message })\r\n  }\r\n}\r\n\r\nexport const addRow = (row) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROW_ADD_REQUEST })\r\n\r\n    const config = {\r\n      'Content-Type': 'application/json'\r\n    }\r\n\r\n    await axios.post(`/rows`, row, config)\r\n\r\n    dispatch({ type: ROW_ADD_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({ type: ROW_ADD_FAIL, payload: error.message })\r\n  }\r\n}\r\n\r\nexport const editRow = (row) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROW_EDIT_REQUEST })\r\n\r\n    const config = {\r\n      'Content-Type': 'application/json'\r\n    }\r\n\r\n    await axios.put(`/rows/${row.id}`, row, config)\r\n\r\n    dispatch({ type: ROW_EDIT_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({ type: ROW_EDIT_FAIL, payload: error.message })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { PopAlert } from './Alerts'\r\nimport { LinearProgress } from '@material-ui/core'\r\n\r\nconst AlertHandler = () => {\r\n  const rowDelete = useSelector((state) => state.rowDelete)\r\n  const { loading: lDel, error: eDel, success: sDel } = rowDelete\r\n\r\n  const rowAdd = useSelector((state) => state.rowAdd)\r\n  const { loading: lAdd, error: eAdd, success: sAdd } = rowAdd\r\n\r\n  const rowEdit = useSelector((state) => state.rowEdit)\r\n  const { loading: lEdit, error: eEdit, success: sEdit } = rowEdit\r\n\r\n  return (\r\n    <>\r\n      {(lDel || lAdd || lEdit) && <LinearProgress />}\r\n      {eDel && <PopAlert isOpen={true} message={eDel} severity='error' />}\r\n      {eAdd && <PopAlert isOpen={true} message={eAdd} severity='error' />}\r\n      {eEdit && <PopAlert isOpen={true} message={eEdit} severity='error' />}\r\n      {sDel && (\r\n        <PopAlert isOpen={true} message='Row Deleted' severity='success' />\r\n      )}\r\n      {sAdd && (\r\n        <PopAlert isOpen={true} message='Row Added' severity='success' />\r\n      )}\r\n      {sEdit && (\r\n        <PopAlert isOpen={true} message='Row Edited' severity='success' />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AlertHandler\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteRow, listRows } from '../stateManager/rowActions'\r\n\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Container,\r\n  LinearProgress,\r\n  ButtonGroup,\r\n  Button,\r\n  Fab\r\n} from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { StaticAlert } from './Alerts'\r\nimport { AddPopup, EditPopup } from './Popup'\r\nimport AlertHandler from './AlertHandler'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell)\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 700\r\n  },\r\n  container: {\r\n    maxHeight: 400\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(8),\r\n    right: theme.spacing(8)\r\n  }\r\n}))\r\n\r\nexport default function DataTable() {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const rowList = useSelector((state) => state.rowList)\r\n  const { loading, error, rows } = rowList\r\n\r\n  const rowDelete = useSelector((state) => state.rowDelete)\r\n  const { success: sDel } = rowDelete\r\n  const rowAdd = useSelector((state) => state.rowAdd)\r\n  const { success: sAdd } = rowAdd\r\n  const rowEdit = useSelector((state) => state.rowEdit)\r\n  const { success: sEdit } = rowEdit\r\n\r\n  useEffect(() => {\r\n    dispatch(listRows())\r\n  }, [dispatch, sDel, sAdd, sEdit])\r\n\r\n  const [addOpen, setAddOpen] = React.useState(false)\r\n  const handleAddClick = () => setAddOpen(!addOpen)\r\n\r\n  const [rowNo, setRowNo] = useState('')\r\n  const [editOpen, setEditOpen] = React.useState(false)\r\n  const handleEditClick = (id) => {\r\n    setRowNo(id)\r\n    setEditOpen(!editOpen)\r\n  }\r\n\r\n  const deleteHandler = (id) => dispatch(deleteRow(id))\r\n\r\n  return (\r\n    <Container maxWidth='lg'>\r\n      <AlertHandler />\r\n      {loading ? (\r\n        <LinearProgress />\r\n      ) : error ? (\r\n        <StaticAlert message={error} />\r\n      ) : (\r\n        <>\r\n          <TableContainer className={classes.container} component={Paper}>\r\n            <Table stickyHeader className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Name</StyledTableCell>\r\n                  <StyledTableCell>Username</StyledTableCell>\r\n                  <StyledTableCell>Email</StyledTableCell>\r\n                  <StyledTableCell>Phone</StyledTableCell>\r\n                  <StyledTableCell>Website</StyledTableCell>\r\n                  <StyledTableCell>Actions</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <StyledTableRow key={row.id}>\r\n                    <StyledTableCell component='th' scope='row'>\r\n                      {row.name}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell>{row.username}</StyledTableCell>\r\n                    <StyledTableCell>{row.email}</StyledTableCell>\r\n                    <StyledTableCell>{row.phone}</StyledTableCell>\r\n                    <StyledTableCell>{row.website}</StyledTableCell>\r\n                    <StyledTableCell>\r\n                      <ButtonGroup variant='contained'>\r\n                        <Button\r\n                          variant='contained'\r\n                          color='primary'\r\n                          onClick={() => handleEditClick(row.id)}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          variant='contained'\r\n                          color='secondary'\r\n                          onClick={() => deleteHandler(row.id)}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Fab\r\n              aria-label='add'\r\n              className={classes.fab}\r\n              onClick={handleAddClick}\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n            <AddPopup open={addOpen} handleClick={handleAddClick} />\r\n            <EditPopup\r\n              open={editOpen}\r\n              handleClick={handleEditClick}\r\n              rowId={rowNo}\r\n            />\r\n          </TableContainer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n","import DataTable from './components/Table'\nimport { Paper } from '@material-ui/core'\n\nfunction App() {\n  return (\n    <Paper style={{ height: '75vh', paddingTop: '25vh' }}>\n      <DataTable />\n    </Paper>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}